@page "/main/index"
@rendermode InteractiveServer
@attribute [Authorize(Roles = "Admin")]
@layout DashboardLayout

@inject NavigationManager NavigationManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IJSRuntime JS
@implements IAsyncDisposable

<PageTitle>Live Activity Log</PageTitle>

<h3>Live Activity Log</h3>

<textarea style="width: 100%; height: 500px;" @ref="TextAreaRef">@messages</textarea>

@code {
    private HubConnection? hubConnection;

    private string messages = string.Empty;
    ElementReference TextAreaRef;

    protected override async Task OnInitializedAsync()
    {
        var userName = SignInManager.Context.User.Identity?.Name;
        var hubUrl = NavigationManager.ToAbsoluteUri($"/lobby?username={userName}");
        hubConnection = new HubConnectionBuilder().WithUrl(hubUrl).Build();

        hubConnection.On<string, string>("ReceivedMessage", async (user, message) =>
        {
            var msg = $"{(string.IsNullOrEmpty(user.ToString()) ? "" : user + ": ")} {message}";
            messages += msg + "\n";
            await InvokeAsync(() =>
            {
                JS.InvokeVoidAsync("scrollToBottom", TextAreaRef);
                StateHasChanged();
            });
        });

        await hubConnection.StartAsync();
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection != null)
            await hubConnection.DisposeAsync();
    }
}
